/**
 * COUNTER_SUSHI5_0 API
 * The COUNTER_SUSHI5_0 API represents a RESTful implementation of SUSHI automation intended to returns COUNTER Release 5 reports and snippets of COUNTER usage in JSON format
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nisohq@niso.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CounterSushi50Api);
  }
}(this, function(expect, CounterSushi50Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CounterSushi50Api.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('getAPIStatus', function() {
      it('should call getAPIStatus successfully', function(done) {
        //uncomment below and update the code to test getAPIStatus
        //instance.getAPIStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConsortiumMembers', function() {
      it('should call getConsortiumMembers successfully', function(done) {
        //uncomment below and update the code to test getConsortiumMembers
        //instance.getConsortiumMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReports', function() {
      it('should call getReports successfully', function(done) {
        //uncomment below and update the code to test getReports
        //instance.getReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsDR1', function() {
      it('should call getReportsDR1 successfully', function(done) {
        //uncomment below and update the code to test getReportsDR1
        //instance.getReportsDR1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsDR2', function() {
      it('should call getReportsDR2 successfully', function(done) {
        //uncomment below and update the code to test getReportsDR2
        //instance.getReportsDR2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsDRx', function() {
      it('should call getReportsDRx successfully', function(done) {
        //uncomment below and update the code to test getReportsDRx
        //instance.getReportsDRx(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsIR', function() {
      it('should call getReportsIR successfully', function(done) {
        //uncomment below and update the code to test getReportsIR
        //instance.getReportsIR(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsIRA1', function() {
      it('should call getReportsIRA1 successfully', function(done) {
        //uncomment below and update the code to test getReportsIRA1
        //instance.getReportsIRA1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsIRM1', function() {
      it('should call getReportsIRM1 successfully', function(done) {
        //uncomment below and update the code to test getReportsIRM1
        //instance.getReportsIRM1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsPR', function() {
      it('should call getReportsPR successfully', function(done) {
        //uncomment below and update the code to test getReportsPR
        //instance.getReportsPR(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsPR1', function() {
      it('should call getReportsPR1 successfully', function(done) {
        //uncomment below and update the code to test getReportsPR1
        //instance.getReportsPR1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTR', function() {
      it('should call getReportsTR successfully', function(done) {
        //uncomment below and update the code to test getReportsTR
        //instance.getReportsTR(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRB1', function() {
      it('should call getReportsTRB1 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRB1
        //instance.getReportsTRB1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRB2', function() {
      it('should call getReportsTRB2 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRB2
        //instance.getReportsTRB2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRB3', function() {
      it('should call getReportsTRB3 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRB3
        //instance.getReportsTRB3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRJ1', function() {
      it('should call getReportsTRJ1 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRJ1
        //instance.getReportsTRJ1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRJ2', function() {
      it('should call getReportsTRJ2 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRJ2
        //instance.getReportsTRJ2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRJ3', function() {
      it('should call getReportsTRJ3 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRJ3
        //instance.getReportsTRJ3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReportsTRJ4', function() {
      it('should call getReportsTRJ4 successfully', function(done) {
        //uncomment below and update the code to test getReportsTRJ4
        //instance.getReportsTRJ4(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
