/**
 * COUNTER_SUSHI5_0 API
 * The COUNTER_SUSHI5_0 API represents a RESTful implementation of SUSHI automation intended to returns COUNTER Release 5 reports and snippets of COUNTER usage in JSON format
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nisohq@niso.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/COUNTERDatabaseReport', 'model/COUNTERDatabaseUsage', 'model/COUNTERItemAttributes', 'model/COUNTERItemComponent', 'model/COUNTERItemContributors', 'model/COUNTERItemDates', 'model/COUNTERItemIdentifiers', 'model/COUNTERItemParent', 'model/COUNTERItemPerformance', 'model/COUNTERItemPerformanceInstance', 'model/COUNTERItemPerformancePeriod', 'model/COUNTERItemReport', 'model/COUNTERItemUsage', 'model/COUNTERPlatformReport', 'model/COUNTERPlatformUsage', 'model/COUNTERPublisherIdentifiers', 'model/COUNTERTitleReport', 'model/COUNTERTitleUsage', 'model/SUSHIConsortiumMemberList', 'model/SUSHIErrorModel', 'model/SUSHIOrgIdentifiers', 'model/SUSHIReportHeader', 'model/SUSHIReportHeaderReportAttributes', 'model/SUSHIReportHeaderReportFilters', 'model/SUSHIReportList', 'model/SUSHIServiceStatus', 'model/SUSHIServiceStatusAlerts', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/COUNTERDatabaseReport'), require('./model/COUNTERDatabaseUsage'), require('./model/COUNTERItemAttributes'), require('./model/COUNTERItemComponent'), require('./model/COUNTERItemContributors'), require('./model/COUNTERItemDates'), require('./model/COUNTERItemIdentifiers'), require('./model/COUNTERItemParent'), require('./model/COUNTERItemPerformance'), require('./model/COUNTERItemPerformanceInstance'), require('./model/COUNTERItemPerformancePeriod'), require('./model/COUNTERItemReport'), require('./model/COUNTERItemUsage'), require('./model/COUNTERPlatformReport'), require('./model/COUNTERPlatformUsage'), require('./model/COUNTERPublisherIdentifiers'), require('./model/COUNTERTitleReport'), require('./model/COUNTERTitleUsage'), require('./model/SUSHIConsortiumMemberList'), require('./model/SUSHIErrorModel'), require('./model/SUSHIOrgIdentifiers'), require('./model/SUSHIReportHeader'), require('./model/SUSHIReportHeaderReportAttributes'), require('./model/SUSHIReportHeaderReportFilters'), require('./model/SUSHIReportList'), require('./model/SUSHIServiceStatus'), require('./model/SUSHIServiceStatusAlerts'), require('./api/DefaultApi'));
  }
}(function(ApiClient, COUNTERDatabaseReport, COUNTERDatabaseUsage, COUNTERItemAttributes, COUNTERItemComponent, COUNTERItemContributors, COUNTERItemDates, COUNTERItemIdentifiers, COUNTERItemParent, COUNTERItemPerformance, COUNTERItemPerformanceInstance, COUNTERItemPerformancePeriod, COUNTERItemReport, COUNTERItemUsage, COUNTERPlatformReport, COUNTERPlatformUsage, COUNTERPublisherIdentifiers, COUNTERTitleReport, COUNTERTitleUsage, SUSHIConsortiumMemberList, SUSHIErrorModel, SUSHIOrgIdentifiers, SUSHIReportHeader, SUSHIReportHeaderReportAttributes, SUSHIReportHeaderReportFilters, SUSHIReportList, SUSHIServiceStatus, SUSHIServiceStatusAlerts, DefaultApi) {
  'use strict';

  /**
   * The_COUNTER_SUSHI5_0_API_represents_a_RESTful_implementation_of_SUSHI_automation_intended_to_returns_COUNTER_Release_5_reports_and_snippets_of_COUNTER_usage_in_JSON_format.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var CounterSushi50Api = require('index'); // See note below*.
   * var xxxSvc = new CounterSushi50Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new CounterSushi50Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new CounterSushi50Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new CounterSushi50Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The COUNTERDatabaseReport model constructor.
     * @property {module:model/COUNTERDatabaseReport}
     */
    COUNTERDatabaseReport: COUNTERDatabaseReport,
    /**
     * The COUNTERDatabaseUsage model constructor.
     * @property {module:model/COUNTERDatabaseUsage}
     */
    COUNTERDatabaseUsage: COUNTERDatabaseUsage,
    /**
     * The COUNTERItemAttributes model constructor.
     * @property {module:model/COUNTERItemAttributes}
     */
    COUNTERItemAttributes: COUNTERItemAttributes,
    /**
     * The COUNTERItemComponent model constructor.
     * @property {module:model/COUNTERItemComponent}
     */
    COUNTERItemComponent: COUNTERItemComponent,
    /**
     * The COUNTERItemContributors model constructor.
     * @property {module:model/COUNTERItemContributors}
     */
    COUNTERItemContributors: COUNTERItemContributors,
    /**
     * The COUNTERItemDates model constructor.
     * @property {module:model/COUNTERItemDates}
     */
    COUNTERItemDates: COUNTERItemDates,
    /**
     * The COUNTERItemIdentifiers model constructor.
     * @property {module:model/COUNTERItemIdentifiers}
     */
    COUNTERItemIdentifiers: COUNTERItemIdentifiers,
    /**
     * The COUNTERItemParent model constructor.
     * @property {module:model/COUNTERItemParent}
     */
    COUNTERItemParent: COUNTERItemParent,
    /**
     * The COUNTERItemPerformance model constructor.
     * @property {module:model/COUNTERItemPerformance}
     */
    COUNTERItemPerformance: COUNTERItemPerformance,
    /**
     * The COUNTERItemPerformanceInstance model constructor.
     * @property {module:model/COUNTERItemPerformanceInstance}
     */
    COUNTERItemPerformanceInstance: COUNTERItemPerformanceInstance,
    /**
     * The COUNTERItemPerformancePeriod model constructor.
     * @property {module:model/COUNTERItemPerformancePeriod}
     */
    COUNTERItemPerformancePeriod: COUNTERItemPerformancePeriod,
    /**
     * The COUNTERItemReport model constructor.
     * @property {module:model/COUNTERItemReport}
     */
    COUNTERItemReport: COUNTERItemReport,
    /**
     * The COUNTERItemUsage model constructor.
     * @property {module:model/COUNTERItemUsage}
     */
    COUNTERItemUsage: COUNTERItemUsage,
    /**
     * The COUNTERPlatformReport model constructor.
     * @property {module:model/COUNTERPlatformReport}
     */
    COUNTERPlatformReport: COUNTERPlatformReport,
    /**
     * The COUNTERPlatformUsage model constructor.
     * @property {module:model/COUNTERPlatformUsage}
     */
    COUNTERPlatformUsage: COUNTERPlatformUsage,
    /**
     * The COUNTERPublisherIdentifiers model constructor.
     * @property {module:model/COUNTERPublisherIdentifiers}
     */
    COUNTERPublisherIdentifiers: COUNTERPublisherIdentifiers,
    /**
     * The COUNTERTitleReport model constructor.
     * @property {module:model/COUNTERTitleReport}
     */
    COUNTERTitleReport: COUNTERTitleReport,
    /**
     * The COUNTERTitleUsage model constructor.
     * @property {module:model/COUNTERTitleUsage}
     */
    COUNTERTitleUsage: COUNTERTitleUsage,
    /**
     * The SUSHIConsortiumMemberList model constructor.
     * @property {module:model/SUSHIConsortiumMemberList}
     */
    SUSHIConsortiumMemberList: SUSHIConsortiumMemberList,
    /**
     * The SUSHIErrorModel model constructor.
     * @property {module:model/SUSHIErrorModel}
     */
    SUSHIErrorModel: SUSHIErrorModel,
    /**
     * The SUSHIOrgIdentifiers model constructor.
     * @property {module:model/SUSHIOrgIdentifiers}
     */
    SUSHIOrgIdentifiers: SUSHIOrgIdentifiers,
    /**
     * The SUSHIReportHeader model constructor.
     * @property {module:model/SUSHIReportHeader}
     */
    SUSHIReportHeader: SUSHIReportHeader,
    /**
     * The SUSHIReportHeaderReportAttributes model constructor.
     * @property {module:model/SUSHIReportHeaderReportAttributes}
     */
    SUSHIReportHeaderReportAttributes: SUSHIReportHeaderReportAttributes,
    /**
     * The SUSHIReportHeaderReportFilters model constructor.
     * @property {module:model/SUSHIReportHeaderReportFilters}
     */
    SUSHIReportHeaderReportFilters: SUSHIReportHeaderReportFilters,
    /**
     * The SUSHIReportList model constructor.
     * @property {module:model/SUSHIReportList}
     */
    SUSHIReportList: SUSHIReportList,
    /**
     * The SUSHIServiceStatus model constructor.
     * @property {module:model/SUSHIServiceStatus}
     */
    SUSHIServiceStatus: SUSHIServiceStatus,
    /**
     * The SUSHIServiceStatusAlerts model constructor.
     * @property {module:model/SUSHIServiceStatusAlerts}
     */
    SUSHIServiceStatusAlerts: SUSHIServiceStatusAlerts,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
