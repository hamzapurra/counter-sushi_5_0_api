/**
 * COUNTER_SUSHI5_0 API
 * The COUNTER_SUSHI5_0 API represents a RESTful implementation of SUSHI automation intended to returns COUNTER Release 5 reports and snippets of COUNTER usage in JSON format
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nisohq@niso.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CounterSushi50Api) {
      root.CounterSushi50Api = {};
    }
    root.CounterSushi50Api.SUSHIErrorModel = factory(root.CounterSushi50Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SUSHIErrorModel model module.
   * @module model/SUSHIErrorModel
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SUSHIErrorModel</code>.
   * Generalized format for presenting errors and exceptions.
   * @alias module:model/SUSHIErrorModel
   * @class
   * @param code {Number} Error number. See table of error.
   * @param severity {module:model/SUSHIErrorModel.SeverityEnum} Severity of the error.
   * @param message {String} Text describing the error.
   */
  var exports = function(code, severity, message) {
    var _this = this;

    _this['code'] = code;
    _this['severity'] = severity;
    _this['message'] = message;


  };

  /**
   * Constructs a <code>SUSHIErrorModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SUSHIErrorModel} obj Optional instance to populate.
   * @return {module:model/SUSHIErrorModel} The populated <code>SUSHIErrorModel</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'Number');
      }
      if (data.hasOwnProperty('severity')) {
        obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('helpURL')) {
        obj['helpURL'] = ApiClient.convertToType(data['helpURL'], 'String');
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], 'String');
      }
    }
    return obj;
  }

  /**
   * Error number. See table of error.
   * @member {Number} code
   */
  exports.prototype['code'] = undefined;
  /**
   * Severity of the error.
   * @member {module:model/SUSHIErrorModel.SeverityEnum} severity
   */
  exports.prototype['severity'] = undefined;
  /**
   * Text describing the error.
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * URL describing error details.
   * @member {String} helpURL
   */
  exports.prototype['helpURL'] = undefined;
  /**
   * Additional data provided by the server to clarify the error.
   * @member {String} data
   */
  exports.prototype['data'] = undefined;


  /**
   * Allowed values for the <code>severity</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SeverityEnum = {
    /**
     * value: "Warning"
     * @const
     */
    "Warning": "Warning",
    /**
     * value: "Fatal"
     * @const
     */
    "Fatal": "Fatal",
    /**
     * value: "Debug"
     * @const
     */
    "Debug": "Debug",
    /**
     * value: "Info"
     * @const
     */
    "Info": "Info"  };


  return exports;
}));


